#!/usr/bin/env bash
set -e

export LOG_FILE=/tmp/update.$(date +"%Y%m%d").log

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
UBUNTU_VERSION=$(lsb_release -rs)

rm -f ${LOG_FILE}

decho () {
  echo `date +"%H:%M:%S"` $1
  echo `date +"%H:%M:%S"` $1 >> ${LOG_FILE}
}

cat <<'FIG'
 _
| | __ _ _ __ ___   __ _ ___ ___ _   _       ___  ___ _ ____   _____ _ __
| |/ _` | '_ ` _ \ / _` / __/ __| | | |_____/ __|/ _ \ '__\ \ / / _ \ '__|
| | (_| | | | | | | (_| \__ \__ \ |_| |_____\__ \  __/ |   \ V /  __/ |
|_|\__,_|_| |_| |_|\__,_|___/___/\__,_|     |___/\___|_|    \_/ \___|_|
FIG

echo -e "\nStarting \033[1mlamassu-server\033[0m update. This will take a few minutes...\n"

if [ "$(whoami)" != "root" ]; then
  echo -e "This script has to be run as \033[1mroot\033[0m user"
  exit 3
fi

# Use a lock file so failed scripts cannot be imediately retried
# If not the backup created on this script would be replaced
if ! mkdir /var/lock/lamassu-update; then
  echo "Script is locked because of a failure." >&2
  exit 1
fi

if [[ "$UBUNTU_VERSION" == "20.04" ]]; then
  echo -e "\033[1mDetected Ubuntu version: 20.04. Your operating system is up to date.\033[0m"
  echo
  echo -e "\033[1mUpdating lamassu-server to Forsaken Fiat v8.0.0-beta.5...\033[0m"
  echo

  export NPM_BIN=$(npm -g bin)

  # Check if ETH was transacted for the first time before 8.0
  SERVER_RELEASE=$(node -p -e "require('$(npm root -g)/lamassu-server/package.json').version")
  REQUIRED_RELEASE=8.0.0-beta.5

  if [ $(printf "%s\n" "$SERVER_RELEASE" "$REQUIRED_RELEASE" | sort -V | head -1) = "$SERVER_RELEASE" ]
  then
    if [ -d /var/lock/lamassu-eth-pending-sweep-finished ]; then
      : # no-op, continue the upgrade
    elif ! mkdir /var/lock/lamassu-eth-pending-sweep; then
      echo "Upgrading l-s is locked because of an intended halt. Please contact support for more info" >&2
      rm -r /var/lock/lamassu-update
      exit 1
    else
      CONFIG_DIR=/etc/lamassu
      CONNECTION_STRING_TEMP=$(grep -oP '(?<="postgresql": ")[^"]*' $CONFIG_DIR/lamassu.json)
      CONNECTION_STRING=$(echo "${CONNECTION_STRING_TEMP/psql/"postgresql"}")

      FIRST_FF_MIGRATION_TIME=$(psql -d $CONNECTION_STRING -Atc "SELECT value->>'timestamp' FROM migrations m, json_array_elements(m.data->'migrations') obj WHERE obj->>'title' = '1603804834628-add-last-accessed-tokens.js';")
      FIRST_ETH_TX_TIME=$(psql -d $CONNECTION_STRING -Atc "SELECT EXTRACT(EPOCH FROM created) * 1000 FROM (SELECT id, crypto_code, created FROM cash_in_txs UNION SELECT id, crypto_code, created FROM cash_out_txs) txs ORDER BY created ASC LIMIT 1;")

      if [ $FIRST_ETH_TX_TIME \> $FIRST_FF_MIGRATION_TIME ]; then
        echo -e "\033[0;31mEthereum was detected to be used in a transaction for the first time after the 8.0 upgrade. In order to continue the upgrade, please contact support and try again later\033[0m"
        curl -o $(npm root -g)/lamassu-server/bin/lamassu-eth-sweep-to-new-wallet https://raw.githubusercontent.com/chaotixkilla/lamassu-server/feat-add-script-sweep-to-new-wallet-web3-0.20/bin/lamassu-eth-sweep-to-new-wallet >> ${LOG_FILE} 2>&1
        rm -r /var/lock/lamassu-update
        exit 1
      else
        rm -r /var/lock/lamassu-eth-pending-sweep
      fi
    fi
  fi

  decho "stopping lamassu-server"
  supervisorctl stop lamassu-server >> ${LOG_FILE} 2>&1
  supervisorctl stop lamassu-admin-server >> ${LOG_FILE} 2>&1

  decho "unlinking old executables"
  find ${NPM_BIN} -type l \( -name "lamassu-*" -or -name "hkdf" \) -exec rm -fv {} \; >> ${LOG_FILE} 2>&1

  if [ -d "/usr/lib/node_modules/lamassu-server" ]; then
      BKP_NAME=lamassu-server-$(date +%s)
      decho "renaming old lamassu-server instance to ${BKP_NAME}"
      mv -v "/usr/lib/node_modules/lamassu-server" "/usr/lib/node_modules/${BKP_NAME}" >> ${LOG_FILE} 2>&1
  fi

  decho "updating lamassu-server to Forsaken Fiat v8.0.0-beta.5..."
  npm -g install lamassu/lamassu-server#v8.0.0-beta.5 --unsafe-perm >> ${LOG_FILE} 2>&1

  decho "rebuilding npm deps"
  cd $(npm root -g)/lamassu-server/ >> ${LOG_FILE} 2>&1
  npm rebuild >> ${LOG_FILE} 2>&1

  {
  decho "running migration"
    lamassu-migrate >> ${LOG_FILE} 2>&1
  } || { echo "Failure running migrations" ; exit 1 ; }

  lamassu-migrate-config >> ${LOG_FILE} 2>&1

  decho "update to mnemonic"
  lamassu-update-to-mnemonic --prod >> ${LOG_FILE} 2>&1

  decho "update ofac sources"
  lamassu-ofac-update-sources >> ${LOG_FILE} 2>&1

  decho "updating supervisor conf"
  perl -i -pe 's/command=.*/command=$ENV{NPM_BIN}\/lamassu-server/g' /etc/supervisor/conf.d/lamassu-server.conf >> ${LOG_FILE} 2>&1
  perl -i -pe 's/command=.*/command=$ENV{NPM_BIN}\/lamassu-admin-server/g' /etc/supervisor/conf.d/lamassu-admin-server.conf >> ${LOG_FILE} 2>&1
  cat <<EOF >> /etc/supervisor/supervisord.conf
[inet_http_server]
port = 127.0.0.1:9001
EOF

  # Temporary patch pre-beta.6
  curl -o $(npm root -g)/lamassu-server/lib/plugins/common/ccxt.js https://raw.githubusercontent.com/lamassu/lamassu-patches/master/hotfix/ccxt/ccxt.js >> ${LOG_FILE} 2>&1
  curl -o $(npm root -g)/lamassu-server/lib/plugins/exchange/kraken.js https://raw.githubusercontent.com/lamassu/lamassu-patches/master/hotfix/ccxt/kraken.js >> ${LOG_FILE} 2>&1

  decho "updating lamassu-server"
  supervisorctl update >> ${LOG_FILE} 2>&1
  supervisorctl start lamassu-server >> ${LOG_FILE} 2>&1
  supervisorctl start lamassu-admin-server >> ${LOG_FILE} 2>&1

  decho "updating backups conf"
  BACKUP_CMD=${NPM_BIN}/lamassu-backup-pg
  BACKUP_CRON="@daily $BACKUP_CMD > /dev/null"
  ( (crontab -l 2>/dev/null || echo -n "") | grep -v '@daily.*lamassu-backup-pg'; echo $BACKUP_CRON ) | crontab - >> $LOG_FILE 2>&1
  $BACKUP_CMD >> $LOG_FILE 2>&1

  decho "updating motd scripts"
  set +e
  chmod -x /etc/update-motd.d/*-release-upgrade 2>/dev/null
  chmod -x /etc/update-motd.d/*-updates-available 2>/dev/null
  chmod -x /etc/update-motd.d/*-reboot-required 2>/dev/null
  chmod -x /etc/update-motd.d/*-help-text 2>/dev/null
  chmod -x /etc/update-motd.d/*-cloudguest 2>/dev/null
  chmod -x /etc/update-motd.d/*-motd-news 2>/dev/null
  set -e

  decho "updating installed wallet nodes"
  lamassu-update-wallet-nodes >> ${LOG_FILE} 2>&1

  echo
  echo -e "\033[1mLamassu server update complete!\033[0m"
  echo
else
  echo
  echo -e "\033[0;31mOld Ubuntu version detected ($UBUNTU_VERSION). Make sure that Ubuntu is on either version 16.04 or 18.04 and update it.\033[0m"
  echo "To update this machine's operating system, please run the following command in this machine's terminal:"
  echo
  echo -e "\033[1mcurl -sS https://raw.githubusercontent.com/lamassu/lamassu-install/electric-enlil/upgrade-os | bash\033[0m"
  echo
fi

# reset terminal to link new executables
hash -r

rm -r /var/lock/lamassu-update

if ! mkdir /var/lock/lamassu-eth-pending-sweep-finished; then
  rm -r /var/lock/lamassu-eth-pending-sweep-finished
fi
